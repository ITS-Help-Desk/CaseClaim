import io

# Not ideal but better than a full rewrite right now
from bot.models.checked_claim import CheckedClaim
from bot.helpers.leaderboard_helpers import LeadstatsResults

from mysql.connector import MySQLConnection
from datetime import datetime

def generate_leadstats_graph(claims: list[CheckedClaim], connection: MySQLConnection, month: bool, date: str) -> io.BytesIO:
    """
    Utilize bots graph methods to generate the leadstats graph.

    @TODO: Implment choice for semester/month

    Args:
        claims      A list of claims generated by CheckedClaim.search()
        connection  The MySQLConnection cursor (Required for convert_to_plot)
        data        The current date as an iso string

    Return:
        Byte stream of leadstats graph

    """

    results = LeadstatsResults(claims, datetime.fromisoformat(date))

    # Force only current month mode. In the future give choice between semester and month
    data_stream = results.convert_to_plot(connection, month, f"ITS Lead CC Statistics for {'Current Month' if month else 'Current Semester'}")
    return data_stream 
    

